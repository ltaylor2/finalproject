plumages <- readDiscreteCharacterData(PLUMAGE_DATA)
phylogeny <- readTrees(TREE_FILE)[1]

moves = VectorMoves()
monitors = VectorMonitors()

mu_plumage ~ dnExponential(1.0)
Q_plumage <- fnJC(2)

moves.append( mvScale(mu_plumage, lambda=1, weight=2) )

phyPlumage ~ dnPhyloCTMC(tree=phylogeny, Q=Q_plumage, type="Standard")
phyPlumage.clamp(plumages)

plumage_model = model(phylogeny)

monitors.append( mnModel(filename="Output/ase_mk.log", printgen=THINNING) )
monitors.append( mnScreen(printgen=1000) )

monitors.append( mnJointConditionalAncestralState(tree=phylogeny,
                                                  ctmc=phyPlumage,
                                                  filename="Output/ase_mk.states.txt",
                                                  type="Standard",
                                                  printgen=THINNING,
                                                  withTips=true,
                                                  withStartStates=false) )

plumage_mcmc = mcmc(plumage_model, monitors, moves, nruns=CHAINS, combine="mixed")

plumage_mcmc.run(generations=ITERATIONS, tuningInterval=200)

anc_states = readAncestralStateTrace("Output/ase_mk.states.txt")

anc_tree = ancestralStateTree(tree=phylogeny,
                              ancestral_state_trace_vector=anc_states,
                              include_start_states=false,
                              file="Output/ase_mk.tree",
                              burnin=BURNIN,
                              summary_statistic="MAP",
                              nStates=1,
                              site=1)

writeNexus( anc_tree, filename="Output/ase_mk.tree" )
